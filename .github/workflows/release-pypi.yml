name: Release Python Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to build (e.g., v1.11.3)'
        required: false
        type: string
      create_release:
        description: 'Create release artifacts'
        required: false
        type: boolean
        default: false
  push:
    branches:
      - main
    paths: ['.github/workflows/build-server.yml', 'llama-cpp-server*/**']
  pull_request:
    paths: ['.github/workflows/build-server.yml', 'llama-cpp-server*/**']
  release:
    types: [published]

permissions:
  contents: read

concurrency:
  group: ${{ github.event.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10.14"]

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          ref: ${{ github.event.inputs.version || github.ref }}
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Rye
        uses: eifinger/setup-rye@v4
        with:
          enable-cache: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python version
        run: |
          echo "${{ matrix.python-version }}" > .python-version
          rye pin "${{ matrix.python-version }}"
          rye sync --no-dev
          rye build --sdist

      - name: Upload sdist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-sdist
          path: |
            dist/*.tar.gz
  
  publish:
    needs: [build-sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: dist-sdist
          path: dist-sdist

      - name: Prepare dist directory
        run: |
          mkdir -p dist
          cp dist-sdist/* dist/
          ls -la dist/

      - name: Install and verify with twine
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade twine
          echo "Checking wheel contents:"
          echo "Running twine check:"
          twine check dist/*

      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
        run: |
          python -m twine upload \
            --verbose \
            --disable-progress-bar \
            dist/*